/*
 * Copyright 2015 Samsung Electronics Co., LTD
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

apply plugin: 'com.android.application'

System.setProperty("appName", "gvr-arpet")

project.ext.hasBackend = true
project.ext.backend_monoscopic = true

if (file("../../common.gradle").exists()) {
    apply from: '../../common.gradle'
} else if (file("../../../../GearVRf-Demos/common.gradle").exists()) {
    apply from: '../../../../GearVRf-Demos/common.gradle'
}

def getPropertyOrDefault(propertyName, defaultValue) {
    return project.hasProperty(propertyName) ? project.property(propertyName) : defaultValue
}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        manifestPlaceholders = [cloudAnchorApiKey: getPropertyOrDefault("cloudAnchorApiKey", "")]
        minSdkVersion 24
        targetSdkVersion 28
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets.main {
        jni.srcDirs = [] // no auto generation of Android.mk
        jniLibs.srcDir 'libs' // pre-compiled libraries
    }
}

dependencies {
    // ARCore library
    implementation 'com.google.ar:core:1.5.0'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'org.greenrobot:eventbus:3.1.1'
    debugImplementation(name: 'MixedReality-debug', ext: 'aar')
    releaseImplementation(name: 'MixedReality-release', ext: 'aar')
    debugImplementation(name: 'gvrf-physics-debug', ext: 'aar')
    releaseImplementation(name: 'gvrf-physics-release', ext: 'aar')
}
